name: app_python

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('app_python/requirements.txt', 'app_python/dev-requirements.txt') }}
      - name: Install dependencies
        working-directory: app_python
        run: python -m pip install --upgrade pip -r requirements.txt -r dev-requirements.txt
        if: ${{ !steps.python-cache.outputs.cache-hit }}
      - run: pylint --rcfile app_python/.pylintrc app_python/
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: app_python/Dockerfile
      - uses: actionshub/markdownlint@main
  test:
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('app_python/requirements.txt', 'app_python/dev-requirements.txt') }}
      - name: Install dependencies
        working-directory: app_python
        run: python -m pip install --upgrade pip -r requirements.txt -r dev-requirements.txt
        if: ${{ !steps.python-cache.outputs.cache-hit }}
      - name: Test
        working-directory: app_python
        run: pytest
  build:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and publish
        run: |
          docker-compose pull
          docker-compose build
          docker-compose push
